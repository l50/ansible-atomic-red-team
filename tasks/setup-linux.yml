---
- name: Install PowerShell on Linux
  block:
    - name: Install dependencies
      ansible.builtin.include_role:
        name: cowdogmoo.workstation.package_management
      vars:
        package_management_common_install_packages: "{{ ansible_atomic_red_team_common_install_packages }}"
        package_management_debian_specific_packages: "{{ ansible_atomic_red_team_debian_specific_packages }}"
        package_management_redhat_specific_packages: "{{ ansible_atomic_red_team_redhat_specific_packages }}"
      when: ansible_os_family in ['Debian', 'RedHat']

    - name: Set architecture mapping for PowerShell tar.gz packages
      ansible.builtin.set_fact:
        ps_arch_map:
          x86_64: "x64"
          aarch64: "arm64"

    - name: Set PowerShell package name based on architecture
      ansible.builtin.set_fact:
        ps_pkg_name: "powershell-{{ ansible_atomic_red_team_pwsh_version }}-linux-{{ ps_arch_map[ansible_architecture] }}.tar.gz"
      when: ansible_architecture in ps_arch_map

    - name: Set PowerShell package download URL
      ansible.builtin.set_fact:
        ps_download_url: "https://github.com/PowerShell/PowerShell/releases/download/v{{ ansible_atomic_red_team_pwsh_version }}/{{ ps_pkg_name }}"
      when: ansible_architecture in ps_arch_map

    - name: Download PowerShell package
      ansible.builtin.get_url:
        url: "{{ ps_download_url }}"
        dest: "/tmp/{{ ps_pkg_name }}"
        mode: "0755"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      when: ps_pkg_name is defined

    - name: Create PowerShell directory
      become: true
      ansible.builtin.file:
        path: "{{ ansible_atomic_red_team_nix_pwsh_path }}"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      when: ps_pkg_name is defined

    - name: Extract PowerShell tar.gz
      become: true
      ansible.builtin.unarchive:
        src: "/tmp/{{ ps_pkg_name }}"
        dest: "{{ ansible_atomic_red_team_nix_pwsh_path }}"
        remote_src: true
      when: ps_pkg_name is defined

    - name: Set execute permissions for pwsh
      become: true
      ansible.builtin.file:
        path: "{{ ansible_atomic_red_team_nix_pwsh_path }}/pwsh"
        mode: "+x"
      when: ps_pkg_name is defined

    - name: Create symlink for pwsh
      become: true
      ansible.builtin.file:
        src: "{{ ansible_atomic_red_team_nix_pwsh_path }}/pwsh"
        dest: "/usr/bin/pwsh"
        state: link
      when: ps_pkg_name is defined

- name: Install Invoke-ART
  ansible.builtin.shell:
    cmd: |
      IEX (IWR 'https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/install-atomicredteam.ps1' -UseBasicParsing); Install-AtomicRedTeam -getAtomics -Force
  args:
    executable: pwsh
    creates: "{{ ansible_user_dir }}/AtomicRedTeam/atomics/Indexes/index.yaml"

- name: Find the path to the system powershell profile
  ansible.builtin.shell:
    cmd: |
      $PROFILE.AllUsersAllHosts
  changed_when: false
  args:
    executable: pwsh
  register: pwshprofile

- name: Powershell Profile (debug)
  ansible.builtin.debug:
    var: pwshprofile.stdout

- name: Add Invoke-AtomicRedTeam to the powershell profile
  ansible.builtin.lineinfile:
    path: "{{ pwshprofile.stdout }}"
    state: present
    regex: '.*Invoke-AtomicRedTeam.*'
    line: |-
      Import-Module "{{ ansible_user_dir }}/AtomicRedTeam/invoke-atomicredteam/Invoke-AtomicRedTeam.psd1" -Force
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0644'
    create: true
